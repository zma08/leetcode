class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        int[]req = new int[numCourses];
        //mark the number of prerequisites of each course
        for(int i=0;i<prerequisites.length;i++){
            req[prerequisites[i][0]]++;
        }
        int count = 0;
        Queue<Integer>courses = new LinkedList<>();
        for(int i=0;i<req.length;i++){
            if(req[i]==0){
                courses.add(i);
            }
        }
        while(!courses.isEmpty()){
            ++count;
            int current = courses.poll();
            for(int[] pre : prerequisites){
                if(pre[1]==current){
                    req[pre[0]]--;
                    if(req[pre[0]]==0){
                        courses.add(pre[0]);
                    }
                }
            }
        }
        return count==numCourses;
    }
}