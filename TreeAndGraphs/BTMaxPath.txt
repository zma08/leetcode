/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        if(root == null)return 0;
        helper(root);
        return max;
    }
    
    public int helper(TreeNode root){
        if(root == null)return 0;
        int l = helper(root.left);
        int r = helper(root.right);
        
        max = Math.max(max, l+r+root.val);
        //make sure the return path is positive
        return Math.max(Math.max(l,r)+root.val,0);
    }
}