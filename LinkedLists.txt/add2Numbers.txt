/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode p = new ListNode(-1);
        ListNode head = p;
        while(l1!=null || l2!=null){
            int sum = carry+(l1==null?0:l1.val) + (l2==null?0:l2.val);
            int current = sum%10;
            carry =sum/10;
            
            ListNode node = new ListNode(current);
            //p will go thru the new node and connect them with pointer refrence
            p.next = node;
            p = p.next;
            
            if(l1!=null)l1 = l1.next;
            if(l2!=null)l2 = l2.next;
            
        }
        if(carry!=0){
            ListNode carryNode = new ListNode(carry);
            carryNode.next = p.next;
            p.next = carryNode;
        }
        return head.next;
    }
}