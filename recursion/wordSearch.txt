class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[i].length;j++){
                if(board[i][j]==word.charAt(0) && helper(board,i,j,word,0))
                    return true;
            }
        }
        return false;
    }
    
    public boolean helper(char[][]board, int i, int j, String word, int len){
        if(len==word.length())return true;
        if(i<0||j<0||i>=board.length||j>=board[0].length||word.charAt(len)!=board[i][j]){
            return false;
        }
	//cache the current char and swap back later for next search
        char temp = board[i][j];
        len++;
        board[i][j]=' ';
        boolean found = helper(board,i+1,j,word,len)
            ||helper(board,i,j+1,word,len)
            ||helper(board,i-1,j,word,len)
            ||helper(board,i,j-1,word,len);
	//store the original char for next search
        board[i][j]=temp;
        return found;
    }
}