class Solution {
    List<String> list = new ArrayList<>();
    public List<String> findWords(char[][] board, String[] words) {
        for(String w : words){
            boolean found = false;
            for(int i=0;i<board.length && !found;i++)
                for(int j=0;j<board[i].length && !found;j++){
                    if(w.charAt(0)==board[i][j] && helper(board,w,i,j,0)){
                        list.add(w);
                        found = true;
                    }
                }
        }
        return list;
    }
    public boolean helper(char[][]board, String word, int i, int j, int len){
        if(len == word.length())return true;
        if(i<0||j<0|| i>=board.length||j>=board[0].length|| word.charAt(len)!=board[i][j]){
            return false;
        }
        char temp = board[i][j];
        len++;
        board[i][j]=' ';
        boolean found = helper(board,word, i+1,j,len)
            ||helper(board,word,i,j+1,len)
            ||helper(board,word,i-1,j,len)
            ||helper(board,word,i,j-1,len);
        board[i][j]=temp;
        return found;
    }
}