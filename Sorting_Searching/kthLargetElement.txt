class Solution {
    public int findKthLargest(int[] nums, int k) {
        //first largest need len-0
        //second need len-1
        //kth need len-k+1 elements
        
        PriorityQueue<Integer>heap = new PriorityQueue<>((a,b)->b-a);
        for(int n : nums){
            heap.add(n); 
        }
        
        
        while(--k>0){
            heap.poll();
        }
        return heap.peek();
        
//         int len = nums.length-k+1;
//         int x = 0;
//         for(int n: nums){
//             heap.add(n);
//             x++;
//             if(x>len)heap.poll();
//         }
//         return heap.peek();
    }
}