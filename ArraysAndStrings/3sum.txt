class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>>list = new ArrayList<>();
        if(nums.length==0)return list;
        Arrays.sort(nums);
        
        for(int i=0;i<nums.length-2;i++){
            //make sure the 1st element is diff than previous triplets
            if(i==0||nums[i]!=nums[i-1]){
                int target = 0-nums[i];
                int l = i+1; 
                int r = nums.length-1;
                while(l<r){
                    int sum = nums[l]+nums[r];
                    if(sum==target){
                        list.add(new ArrayList<>(Arrays.asList(nums[i],nums[l],nums[r])));
                        l++;r--;
                        //make sure the 2nd element is diff than the previous set
                        while(l<r && nums[l]==nums[l-1])l++;
                        while(l<r && nums[r]==nums[r+1])r--;
                    }else if(sum>target)r--;
                    else
                        l++;
                }
            }
        }
        return list;
    }
}