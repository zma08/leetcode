class Solution {
    public int trap(int[] height) {
        if(height.length==0)return 0;
        int[]dpl = new int[height.length];
        int[]dpr = new int[height.length];
        
        dpl[0]=0;
        dpr[height.length-1]=0;
        for(int i=1;i<height.length;i++){
            dpl[i]=Math.max(height[i-1],dpl[i-1]);
        }
        for(int i= height.length-2;i>=0;i--){
            dpr[i]=Math.max(dpr[i+1],height[i+1]);
        }
        
        int max = 0;
        for(int i=0;i<height.length;i++){
	//make sure if the current height is higher than the max of l and r then result will be 0 instead of negtive
            max+=Math.max(Math.min(dpl[i],dpr[i])-height[i],0);
        }
        return max;
    }
}